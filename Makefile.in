obj = bin/viash
VERSION = $(shell awk -F'\"' '/version :=/ { print $$2 }' build.sbt)
WF_HELPER_NF = src/main/resources/io/viash/platforms/nextflow/WorkflowHelper.nf
NF_FILES := $(shell find src/main/resources/io/viash/platforms/nextflow/*/ -name "*.nf" | sort)

$(obj): $(shell find src/ -name "*.scala") $(WF_HELPER_NF)
	sbt headerCreate \
	  'set assembly / test := {}' \
	  'set assembly / assemblyOutputPath := new File("target/viash.jar")' \
	  assembly
	mkdir -p bin
	cat src/stub.sh target/viash.jar > $(obj)
	chmod +x $(obj)
	@echo "==================================> $(obj)"

$(WF_HELPER_NF): $(NF_FILES)
	@echo -e "////////////////////////////\n// VDSL3 helper functions //\n////////////////////////////" > $@
	@for f in $(NF_FILES); do \
		echo -e "\n// helper file: '$$f'" >> $@; \
		cat $$f >> $@; \
	done
	@echo "==================================> $@"
	
tools: $(obj) $(shell find src/viash)
	bin/viash ns build -s src/viash -t bin --flatten -c ".functionality.version := '$(VERSION)'"
	@echo "==================================> tools"

.PHONY: with-docker
with-docker:
	mkdir -p bin
	docker build -t viash .
	docker create -it --name viash-cp viash bash
	docker cp viash-cp:"/app/viash/target/viash.jar" /tmp/viash.jar
	docker rm -f viash-cp
	cat src/stub.sh /tmp/viash.jar > $(obj)
	chmod +x $(obj)

.PHONY: docker
docker:
	docker build -t dataintuitive/viash:$(VERSION) .

.PHONY: test
test:
	sbt 'testOnly -- -l io.viash.NativeTest'

.PHONY: clean
clean:
	sbt clean
	if [[ -d bin/ ]]; then rm -r bin/; fi

.PHONY: install
install: $(obj)
	mkdir -p $(DESTDIR)$(PREFIX)/bin
	cp $< $(DESTDIR)$(PREFIX)/bin/viash

.PHONY: uninstall
uninstall:
	rm -f $(DESTDIR)$(PREFIX)/bin/viash
