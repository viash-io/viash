name: Scala CI

on: [push]

jobs:
  scala-ci:
    runs-on: ${{ matrix.config.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    strategy:
      fail-fast: false
      matrix:
        config:
          - {name: 'main', os: ubuntu-latest, r: '3.6.1', python: '3.8' }
          - {name: 'ubuntu_latest', os: ubuntu-latest, r: 'release', python: '3.x' }
          - {name: 'macos_latest', os: macos-latest, r: 'release', python: '3.x' }

    steps:
    - uses: actions/checkout@v2

    - name: Set up nextflow
      if: runner.os == 'Linux'
      run: |
        mkdir -p "$HOME/.local/bin"
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        curl -s https://get.nextflow.io | bash
        mv nextflow "$HOME/.local/bin"
        NXF_VER=21.04.1 nextflow run hello
        nextflow -version

    - name: Set up R
      uses: r-lib/actions/setup-r@master
      with:
        r-version: ${{ matrix.config.r }}

    - name: Cache R packages
      if: runner.os != 'Windows'
      uses: actions/cache@v1
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ matrix.config.name }}
        restore-keys: ${{ matrix.config.name }}

    - name: Install system dependencies
      if: runner.os == 'Linux'
      env:
        RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
      run: |
        sudo apt-get update
        sudo apt-get install -y libicu-dev make libssl-dev libxml2-dev zlib1g-dev libbibutils6 libghc-pandoc-citeproc-data pandoc-data

    - name: Set up sbt
      uses: olafurpg/setup-scala@v13

    - name: Install R dependencies
      run: |
        install.packages(c("processx", "testthat"))
      shell: Rscript {0}

    - name: Set up Scala
      run: |
        if [[ "${{ matrix.config.os }}" =~ ^macos.*$ ]]; then
          brew update
          brew install scala
        else
          sudo apt-get update
          sudo apt-get install -y scala
        fi
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.config.python }}

    - name: Run tests
      run: |
        if [[ "${{ matrix.config.name }}" == "main" ]]; then
          # only run coverage on main runner
          sbt clean coverage test coverageReport
        elif [[ "${{ matrix.config.os }}" =~ ^macos.*$ ]]; then
          # macOS on github actions does not have Docker, so skip those
          sbt 'testOnly -- -l com.dataintuitive.viash.DockerTest'
        else
          sbt test
        fi

    - name: Upload coverage on success
      run: bash <(curl -s https://codecov.io/bash)

    - name: Upload check results on fail
      if: failure()
      uses: actions/upload-artifact@master
      with:
        name: ${{ matrix.config.name }}_results
        path: check
